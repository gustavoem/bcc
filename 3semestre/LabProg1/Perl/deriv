#!/usr/bin/perl -- -*- mode:cperl -*-

open(GPLOT,"| gnuplot") or die "num deu";
select GPLOT; $|=1; select STDOUT;

#diferencia um termo
sub Dterm {
  my $t = shift;				# pega o termo
  my ($c,$e,$r,$sig);			# coef, expoente, resultado, sinal
  return "" if $t !~ /x/;		# se não tem x, é 0 (veja abaixo)

  # separa os valores
  ($sig,$c,$e) = $t =~ /
						 ([+-]?)	  # sinal
						 (\d*[.]?\d*) # coeficiente
						 \*?x\^?
						 (\d*)		  # expoente
					   /x;

  return "" if $c =~ /^0*[.]?0+$/; # caso particular do tipo 0*x^2 == 0)
  return "" if $e =~ /^0+$/;	   # constante

  $c = 1 unless $c;		# coef inexistente é 1 (ex:. x^2 == 1*x^2)

  $e = 1 unless $e;		# exp. inexistente é 1 : 3*x == 3*x^1)

  $c *= $e;						# coef da derivada
  $e--;							# exp. da derivada

  # montagem do resultado
  $r = $sig . $c;
  if ($e) {
	$r .= "*x";
	$r .= "^$e" if $e !=1;
  }
  return $r;
}

while (<>) {
  y/ \t\n//d;					# Tira brancos
  @p = ();						# @p conterá os termos
  $d = '';						# derivada
 # $p = $_;						# polinômio

  # coloca em @p os termos, retirando-os da linha lida
  push @p, $1 while s/^([+-]?(((\d*[.]?\d+\*)?x(\^\d+)?)|\d+))//;
  $p = join "",@p;
  # diferencia termo a termo
  $d .= Dterm($_)for (@p);

  # caso particular quando o resultado é vazio (ex:. $p <- '4')
  $d = 0 unless $d =~ /\d|x/;

  # imprime a derivada
  print "$p\n--> $d\n";

  $plt = "$p";					# para o gnuplot
  $plt =~ s/\^/**/g;			# exponenciação no gnuplot é **
  $dlt = "$d";					# para o gnuplot
  $dlt =~ s/\^/**/g;			# exponenciação no gnuplot é **
  print GPLOT "plot $plt t '$p', $dlt t '$d'\n";
}
close GPLOT;
