Autor:      Gustavo Estrela
Numero USP: 8536051
Sigla:      GUSTAVOE
Data:       2016-08-17
Este arquivo faz parte da tarefa F

Para os nossos testes, utilizamos o valor de k = 100, o que mostrou
razoável consistência nos dados observados.

O primeiro fato observado nos testes realizados foi que quando A fica
muito grande comparado a V temos que o digrafo costuma ser conexo, 
portanto o tamanho da maior componente conexa é o tamanho do próprio
digrafo. Veja a tabela abaixo, por exemplo:

V = 4000; k = 100

A tabela abaixo mostra o tamanho médio da 1a, 2a e 3amaiores componentes de k 
digrafos aleatórios

   A   |  1a maior componente  |  2a maior componente  |  3a maior componente
_____________________________________________________________________________

  2000 |           1.26        |           1.01        |           1.00        
  4000 |          18.30        |           4.64        |           2.60        
  6000 |        1351.04        |           2.13        |           1.26        
  8000 |        2549.29        |           1.42        |           1.02        
 10000 |        3186.64        |           1.13        |           1.00        
 12000 |        3543.08        |           1.06        |           1.00        
 14000 |        3731.47        |           1.02        |           1.01        
 16000 |        3843.76        |           1.00        |           1.00        
 18000 |        3906.88        |           1.00        |           1.00        
 20000 |        3945.44        |           1.00        |           1.00        
 22000 |        3966.47        |           1.00        |           1.00        
 24000 |        3980.10        |           1.00        |           1.00        
 26000 |        3987.64        |           1.00        |           1.00        
 28000 |        3992.50        |           1.00        |           0.99        
 30000 |        3995.17        |           1.00        |           0.94        
 32000 |        3997.30        |           0.92        |           0.73        
 34000 |        3998.14        |           0.88        |           0.59        
 36000 |        3999.05        |           0.64        |           0.21        
 38000 |        3999.44        |           0.45        |           0.09        
 40000 |        3999.62        |           0.31        |           0.06        
 42000 |        3999.77        |           0.20        |           0.01        
 44000 |        3999.85        |           0.15        |           0.00        
 46000 |        3999.88        |           0.10        |           0.02        
 48000 |        3999.95        |           0.05        |           0.00        
 50000 |        3999.98        |           0.02        |           0.00        
 52000 |        3999.98        |           0.02        |           0.00        
 54000 |        3999.98        |           0.02        |           0.00        
 56000 |        3999.99        |           0.01        |           0.00        
 58000 |        4000.00        |           0.00        |           0.00        
 60000 |        3999.98        |           0.02        |           0.00        
 62000 |        4000.00        |           0.00        |           0.00        
 64000 |        4000.00        |           0.00        |           0.00 

Note que para esta tabela estamos variando A de V / 2 até 16. 

Podemos observar na tabela anterior que os tamanhos das maiores 
componentes aumentam e, depois de um certo ponto apenas a primeira
componente aumenta enquanto que a 2a e 3a praticamente só diminuem.
Qual seria esse ponto?

Para determinar isto, reduzimos o "pulo" considerado entre os valores
de A. E geramos tabelas como a de baixo:

V = 20000; k = 100

A tabela abaixo mostra o tamanho médio da 1a, 2a e 3amaiores componentes de k 
digrafos aleatórios

   A   |  1a maior componente  |  2a maior componente  |  3a maior componente
_____________________________________________________________________________

 10000 |           1.23        |           1.02        |           1.00        
 12000 |           1.57        |           1.11        |           1.00        
 14000 |           1.72        |           1.16        |           1.01        
 16000 |           2.59        |           1.28        |           1.04        
 18000 |           4.56        |           1.80        |           1.09        
 20000 |          32.14        |           8.44        |           3.77        
 22000 |         578.06        |          10.70        |           4.45        
 24000 |        1945.56        |           4.65        |           2.35        
 26000 |        3562.08        |           3.32        |           1.45        
 28000 |        5227.83        |           2.56        |           1.39        
 30000 |        6792.14        |           1.85        |           1.16        
 32000 |        8256.29        |           1.88        |           1.16        
 34000 |        9543.38        |           1.68        |           1.06        
 36000 |       10731.43        |           1.50        |           1.06        
 38000 |       11770.73        |           1.46        |           1.09        
 40000 |       12692.98        |           1.29        |           1.01        
 42000 |       13516.77        |           1.31        |           1.01        
 44000 |       14248.52        |           1.32        |           1.02        
 46000 |       14884.67        |           1.11        |           1.00        
 48000 |       15427.87        |           1.12        |           1.01        
 50000 |       15932.14        |           1.13        |           1.00        
 52000 |       16384.38        |           1.10        |           1.01        
 54000 |       16770.84        |           1.06        |           1.00        

E, o que podemos observar foi que o ponto em que a 2a e 3as maiores 
componentes atingem seu máximo está perto de 1.1V.

Usando o programa time, medimos o tempo gasto por ambos algoritmos e
confirmamos o que já era esperado: o algoritmo Kosaraju-Sharir é mais
eficiente que o algoritmo simples que determina componentes fortes.
Para uma instância de V = 100 e k = 100 o algoritmo simples usou
aproximadamente 13s de computação, enquanto que o algoritmo 
Kosaraju-Sharir usou apenas 2,5s.
